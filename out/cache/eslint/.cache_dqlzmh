[{"/Users/zainqaiser/factionchat/pages/_app.js":"1","/Users/zainqaiser/factionchat/pages/api/auth/[...nextauth].js":"2","/Users/zainqaiser/factionchat/pages/api/auth/request-message.js":"3","/Users/zainqaiser/factionchat/pages/api/getNFTMetdata.js":"4","/Users/zainqaiser/factionchat/pages/api/getNFTs.js":"5","/Users/zainqaiser/factionchat/pages/dashboard.js":"6","/Users/zainqaiser/factionchat/pages/index.js":"7","/Users/zainqaiser/factionchat/pages/welcome.js":"8"},{"size":1184,"mtime":1681209087019,"results":"9","hashOfConfig":"10"},{"size":1448,"mtime":1680726841930,"results":"11","hashOfConfig":"10"},{"size":1223,"mtime":1680717818084,"results":"12","hashOfConfig":"10"},{"size":416,"mtime":1688608092891,"results":"13","hashOfConfig":"10"},{"size":873,"mtime":1688579551923,"results":"14","hashOfConfig":"10"},{"size":2598,"mtime":1689091248351,"results":"15","hashOfConfig":"10"},{"size":4781,"mtime":1689337184326,"results":"16","hashOfConfig":"10"},{"size":15252,"mtime":1689337904668,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"27qw1c",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/zainqaiser/factionchat/pages/_app.js",[],[],"/Users/zainqaiser/factionchat/pages/api/auth/[...nextauth].js",[],[],"/Users/zainqaiser/factionchat/pages/api/auth/request-message.js",[],[],"/Users/zainqaiser/factionchat/pages/api/getNFTMetdata.js",[],[],"/Users/zainqaiser/factionchat/pages/api/getNFTs.js",[],[],"/Users/zainqaiser/factionchat/pages/dashboard.js",[],[],"/Users/zainqaiser/factionchat/pages/index.js",[],[],"/Users/zainqaiser/factionchat/pages/welcome.js",["42","43","44","45"],[],{"ruleId":"46","severity":1,"message":"47","line":163,"column":6,"nodeType":"48","endLine":163,"endColumn":15,"suggestions":"49"},{"ruleId":"46","severity":1,"message":"50","line":165,"column":9,"nodeType":"51","endLine":214,"endColumn":4,"suggestions":"52"},{"ruleId":"46","severity":1,"message":"53","line":227,"column":6,"nodeType":"48","endLine":227,"endColumn":8,"suggestions":"54"},{"ruleId":"55","severity":1,"message":"56","line":417,"column":19,"nodeType":"57","endLine":417,"endColumn":98},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchAddress'. Either include it or remove the dependency array.","ArrayExpression",["58"],"The 'fetchNFTs' function makes the dependencies of useEffect Hook (at line 220) change on every render. To fix this, wrap the definition of 'fetchNFTs' in its own useCallback() Hook.","VariableDeclarator",["59"],"React Hook useEffect has a missing dependency: 'fetchNFTs'. Either include it or remove the dependency array.",["60"],"@next/next/no-img-element","Do not use `<img>` element. Use `<Image />` from `next/image` instead. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement",{"desc":"61","fix":"62"},{"desc":"63","fix":"64"},{"desc":"65","fix":"66"},"Update the dependencies array to be: [address, fetchAddress]",{"range":"67","text":"68"},"Wrap the definition of 'fetchNFTs' in its own useCallback() Hook.",{"range":"69","text":"70"},"Update the dependencies array to be: [fetchNFTs]",{"range":"71","text":"72"},[4572,4581],"[address, fetchAddress]",[4605,6039],"useCallback(async () => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      const response = await axios.post('/api/getNFTMetdata', { contractAddress, network });\n\n      if (response.status !== 200) {\n        throw new Error('Failed to fetch NFTs');\n      }\n\n      const data = response.data;\n    //   console.log('Data:', data); \n\n      if (typeof data !== 'object' || Array.isArray(data)) {\n        throw new Error('Invalid data format: response data is not an object');\n      }\n\n      const processedNFTs = [];\n\n      for (const key in data) {\n        if (data.hasOwnProperty(key)) {\n          const nft = data[key];\n          const { metadataUri, ...rest } = nft;\n\n          try {\n            console.log('Metadata URI:', metadataUri); // Log the metadata URI\n            const metadataResponse = await axios.get(metadataUri, {\n              headers: {\n                'Content-Type': 'application/json',\n              },\n            });\n\n            const processedNFT = { ...rest, metadata: metadataResponse.data };\n            processedNFTs.push(processedNFT);\n          } catch (error) {\n            console.error('Failed to fetch metadata:', error);\n            // You can handle the error as per your requirements\n          }\n        }\n      }\n\n      setNFTs(processedNFTs);\n    } catch (error) {\n      setError(error.message);\n      console.error('Fetch NFTs error:', error);\n    } finally {\n      setLoading(false);\n    }\n  })",[6200,6202],"[fetchNFTs]"]